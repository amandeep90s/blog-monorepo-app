# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  """JWT access token"""
  accessToken: String!

  """User avatar"""
  avatar: String

  """User ID"""
  id: String!

  """User email"""
  name: String!
}

type Comment {
  """User who authored the comment"""
  author: User!

  """Content of the comment"""
  content: String!

  """Timestamp when the comment was created"""
  createdAt: DateTime!

  """Comment ID"""
  id: String!

  """Post the comment belongs to"""
  post: Post!

  """Timestamp when the comment was last updated"""
  updatedAt: DateTime!
}

input CreateCommentInput {
  """Example field (placeholder)"""
  exampleField: String!
}

input CreateLikeInput {
  """Example field (placeholder)"""
  exampleField: String!
}

input CreatePostInput {
  """Example field (placeholder)"""
  exampleField: String!
}

input CreateTagInput {
  """Example field (placeholder)"""
  exampleField: String!
}

input CreateUserInput {
  """The avatar of the user"""
  avatar: String

  """The bio of the user"""
  bio: String

  """The email of the user"""
  email: String!

  """The  name of the user"""
  name: String!

  """The password of the user"""
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Like {
  """Timestamp when the like was created"""
  createdAt: DateTime!

  """Like ID"""
  id: String!

  """Post that was liked"""
  post: Post!

  """User who liked the post"""
  user: User!
}

type Mutation {
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createLike(createLikeInput: CreateLikeInput!): Like!
  createPost(createPostInput: CreatePostInput!): Post!
  createTag(createTagInput: CreateTagInput!): Tag!
  createUser(createUserInput: CreateUserInput!): User!
  removeComment(id: String!): Comment!
  removeLike(id: String!): Like!
  removePost(id: String!): Post!
  removeTag(id: String!): Tag!
  removeUser(id: String!): User!
  signIn(signInInput: SignInInput!): AuthPayload!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  updateLike(updateLikeInput: UpdateLikeInput!): Like!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  updateTag(updateTagInput: UpdateTagInput!): Tag!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Post {
  """Author of the post"""
  author: User!

  """Comments made on the post"""
  comments: [Comment!]!

  """Post Content"""
  content: String!

  """Post Creation Date"""
  createdAt: DateTime!

  """Post ID"""
  id: String!

  """Is the post published?"""
  published: Boolean!

  """Post Slug"""
  slug: String!

  """Tags associated with the post"""
  tags: [Tag!]!

  """Post Thumbnail"""
  thumbnail: String

  """Post Title"""
  title: String!

  """Post Last Update Date"""
  updatedAt: DateTime!
}

type Query {
  comment(id: String!): Comment!
  like(id: String!): Like!
  post(id: String!): Post!
  posts(skip: Float, take: Float): [Post!]!
  postsCount: Int!
  tag(id: String!): Tag!
  user(id: String!): User!
  userByEmail(email: String!): User!
  users: [User!]!
}

input SignInInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

type Tag {
  """Tag ID"""
  id: String!

  """Name of the tag"""
  name: String!

  """Posts associated with the tag"""
  posts: [Post!]!
}

input UpdateCommentInput {
  """Example field (placeholder)"""
  exampleField: String
  id: String!
}

input UpdateLikeInput {
  """Example field (placeholder)"""
  exampleField: String
  id: String!
}

input UpdatePostInput {
  """Example field (placeholder)"""
  exampleField: String
  id: String!
}

input UpdateTagInput {
  """Example field (placeholder)"""
  exampleField: String
  id: String!
}

input UpdateUserInput {
  """The avatar of the user"""
  avatar: String

  """The bio of the user"""
  bio: String

  """The email of the user"""
  email: String
  id: String!

  """The  name of the user"""
  name: String

  """The password of the user"""
  password: String
}

type User {
  """User avatar URL"""
  avatar: String

  """User bio"""
  bio: String

  """Comments made by the user"""
  comments: [Comment!]!

  """Account creation date"""
  createdAt: DateTime!

  """User email"""
  email: String!

  """User ID"""
  id: String!

  """User Name"""
  name: String!

  """Posts authored by the user"""
  posts: [Post!]!

  """Account last update date"""
  updatedAt: DateTime!
}